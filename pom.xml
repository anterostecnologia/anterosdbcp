<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>

   <properties>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <sureFireOptions9 />
      <sureFireForks9>false</sureFireForks9>
      <artifact.classifier />

      <docker.maven.plugin.fabric8.version>0.31.0</docker.maven.plugin.fabric8.version>
      <felix.bundle.plugin.version>4.1.0</felix.bundle.plugin.version>
      <felix.version>6.0.1</felix.version>
      <hibernate.version>5.2.10.Final</hibernate.version>
      <javassist.version>3.24.1-GA</javassist.version>
      <jndi.version>0.11.4.1</jndi.version>
      <maven.release.version>2.5.3</maven.release.version>
      <metrics.version>3.2.4</metrics.version>
      <micrometer.version>1.0.0</micrometer.version>
      <simpleclient.version>0.0.26</simpleclient.version>
      <mockito.version>2.23.4</mockito.version>
      <pax.exam.version>4.13.1</pax.exam.version>
      <pax.url.version>2.5.4</pax.url.version>
      <postgresql.version>42.1.4</postgresql.version>
      <slf4j.version>1.7.25</slf4j.version>
      <log4j.version>2.11.1</log4j.version>
      <commons.csv.version>1.5</commons.csv.version>
      <h2.version>1.4.196</h2.version>
      <junit.version>4.12</junit.version>
      <bintray.subject>edson</bintray.subject>
	  <bintray.repo>maven</bintray.repo>
	  <bintray.package>anteros-dbcp</bintray.package>
	  <java.versao>1.8</java.versao>
  	  <maven.compiler.source>1.8</maven.compiler.source>
	  <maven.compiler.target>1.8</maven.compiler.target>
   </properties>

   <groupId>br.com.anteros</groupId>
   <artifactId>Anteros-DBCP</artifactId>
   <version>1.0.1</version>
   <packaging>bundle</packaging>


   <name>Anteros DBCP</name>
   <description>Anteros JDBC Connection Pool</description>
   <organization>
		<name>Anteros Tecnologia</name>
		<url>http://www.anteros.com.br</url>
	</organization>
	<url>http://github.com/anterostecnologia</url>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>
	<scm>
		<connection>scm:git:git@github.com:anterostecnologia/anterosdbcp.git</connection>
		<developerConnection>scm:git:git@github.com:anterostecnologia/anterosdbcp.git</developerConnection>
		<url>https://github.com/anterostecnologia/anterosdbcp</url>
	</scm>

	<developers>
		<developer>
			<id>edson</id>
			<name>Edson Martins</name>
			<email>edsonmartins2005@gmail.com</email>
			<organization>Anteros Tecnologia</organization>
			<organizationUrl>http://www.anteros.com.br</organizationUrl>
			<roles>
				<role>architect</role>
				<role>developer</role>
			</roles>
		</developer>
	</developers>

   <prerequisites>
      <maven>3.3.9</maven>
   </prerequisites>

   <dependencies>
      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-api</artifactId>
         <version>${slf4j.version}</version>
      </dependency>
      <dependency>
         <groupId>org.apache.logging.log4j</groupId>
         <artifactId>log4j-slf4j-impl</artifactId>
         <version>${log4j.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.apache.logging.log4j</groupId>
         <artifactId>log4j-api</artifactId>
         <version>${log4j.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.apache.logging.log4j</groupId>
         <artifactId>log4j-core</artifactId>
         <version>${log4j.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.apache.commons</groupId>
         <artifactId>commons-csv</artifactId>
         <version>${commons.csv.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.mockito</groupId>
         <artifactId>mockito-core</artifactId>
         <version>${mockito.version}</version>
         <scope>test</scope>
         <exclusions>
            <exclusion>
               <groupId>org.hamcrest</groupId>
               <artifactId>hamcrest-core</artifactId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <version>${junit.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.javassist</groupId>
         <artifactId>javassist</artifactId>
         <version>${javassist.version}</version>
         <optional>true</optional>
      </dependency>
      <dependency>
         <groupId>io.micrometer</groupId>
         <artifactId>micrometer-core</artifactId>
         <version>${micrometer.version}</version>
         <optional>true</optional>
      </dependency>
      <dependency>
         <groupId>org.postgresql</groupId>
         <artifactId>postgresql</artifactId>
         <version>${postgresql.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-core</artifactId>
         <version>${hibernate.version}</version>
         <scope>provided</scope>
         <optional>true</optional>
         <exclusions>
            <exclusion>
               <artifactId>jboss-logging</artifactId>
               <groupId>org.jboss.logging</groupId>
            </exclusion>
            <exclusion>
               <artifactId>jboss-logging-annotations</artifactId>
               <groupId>org.jboss.logging</groupId>
            </exclusion>
         </exclusions>
      </dependency>
      <dependency>
         <groupId>io.dropwizard.metrics</groupId>
         <artifactId>metrics-core</artifactId>
         <version>${metrics.version}</version>
         <scope>provided</scope>
         <optional>true</optional>
      </dependency>
      <dependency>
         <groupId>io.dropwizard.metrics</groupId>
         <artifactId>metrics-healthchecks</artifactId>
         <version>${metrics.version}</version>
         <scope>provided</scope>
         <optional>true</optional>
      </dependency>
      <dependency>
         <groupId>io.prometheus</groupId>
         <artifactId>simpleclient</artifactId>
         <version>${simpleclient.version}</version>
         <scope>provided</scope>
         <optional>true</optional>
      </dependency>
      <dependency>
         <groupId>simple-jndi</groupId>
         <artifactId>simple-jndi</artifactId>
         <version>${jndi.version}</version>
         <scope>test</scope>
      </dependency>

      <!-- OSGi test -->
      <dependency>
         <groupId>javax.inject</groupId>
         <artifactId>javax.inject</artifactId>
         <version>1</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.apache.felix</groupId>
         <artifactId>org.apache.felix.framework</artifactId>
         <version>${felix.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.ops4j.pax.exam</groupId>
         <artifactId>pax-exam-container-native</artifactId>
         <version>${pax.exam.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.ops4j.pax.exam</groupId>
         <artifactId>pax-exam-junit4</artifactId>
         <version>${pax.exam.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.ops4j.pax.exam</groupId>
         <artifactId>pax-exam-link-assembly</artifactId>
         <version>${pax.exam.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.ops4j.pax.exam</groupId>
         <artifactId>pax-exam-link-mvn</artifactId>
         <version>${pax.exam.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.ops4j.pax.url</groupId>
         <artifactId>pax-url-aether</artifactId>
         <version>${pax.url.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.ops4j.pax.url</groupId>
         <artifactId>pax-url-reference</artifactId>
         <version>${pax.url.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>com.h2database</groupId>
         <artifactId>h2</artifactId>
         <version>${h2.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
			<groupId>br.com.anteros</groupId>
			<artifactId>Anteros-Core</artifactId>
			<version>[1.0.0,)</version>
		</dependency>
   </dependencies>
   
   <repositories>
		<repository>
			<id>oss-snapshots-repo</id>
			<name>Sonatype OSS Maven Repository</name>
			<url>https://oss.sonatype.org/content/groups/public</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</repository>
	</repositories>

   <build>
      <plugins>
         <plugin>
            <!-- Generate proxies -->
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.6.0</version>
            <executions>
               <execution>
                  <phase>compile</phase>
                  <!-- phase>generate-test-sources</phase -->
                  <goals>
                     <goal>java</goal>
                  </goals>
               </execution>
            </executions>
            <configuration>
               <mainClass>br.com.anteros.dbcp.util.JavassistProxyFactory</mainClass>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.2</version>
            <executions>
               <!-- Prepares the property pointing to the JaCoCo runtime agent which is passed as VM argument when Maven the Surefire plugin is executed. -->
               <execution>
                  <goals>
                     <goal>prepare-agent</goal>
                  </goals>
                  <configuration>
                     <!-- Sets the path to the file which contains the execution data. -->
                     <destFile>${project.build.directory}/coverage-reports/jacoco.exec</destFile>
                     <!-- Sets the name of the property containing the settings for JaCoCo runtime agent. -->
                     <propertyName>surefireArgLine</propertyName>
                     <excludes>
                        <exclude>**/br/com/anteros/dbcp/util/JavassistProxyFactory*</exclude>
                        <exclude>**/br/com/anteros/dbcp/pool/AnterosDBCPProxy*</exclude>
                        <exclude>**/br/com/anteros/dbcp/metrics/**</exclude>
                     </excludes>
                  </configuration>
               </execution>
               <!-- Ensures that the code coverage report for unit tests is created after unit tests have been run. -->
               <execution>
                  <id>report</id>
                  <phase>test</phase>
                  <goals>
                     <goal>report</goal>
                  </goals>
                  <configuration>
                     <!-- Sets the path to the file which contains the execution data. -->
                     <dataFile>${project.build.directory}/coverage-reports/jacoco.exec</dataFile>
                     <excludes>
                        <exclude>**/br/com/anteros/dbcp/pool/AnterosDBCPProxy*</exclude>
                        <exclude>**/br/com/anteros/dbcp/metrics/**</exclude>
                     </excludes>
                  </configuration>
               </execution>
            </executions>
         </plugin>

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>3.0.0-M3</version>
            <executions>
               <execution>
                  <goals>
                     <goal>integration-test</goal>
                     <goal>verify</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>

         <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <version>${felix.bundle.plugin.version}</version>
            <extensions>true</extensions>
            <configuration>
               <classifier>${artifact.classifier}</classifier>
               <instructions>
                  <Automatic-Module-Name>br.com.anteros.dbcp</Automatic-Module-Name>
                  <Bundle-Name>AnterosDBCP</Bundle-Name>
                  <Export-Package>
                     br.com.anteros.dbcp,
                     br.com.anteros.dbcp.hibernate,
                     br.com.anteros.dbcp.metrics
                  </Export-Package>
                  <Private-Package>br.com.anteros.dbcp.*</Private-Package>
                  <_exportcontents>
                     br.com.anteros.dbcp.pool,
                     br.com.anteros.dbcp.util
                  </_exportcontents>
                  <Import-Package>
                     javax.management,
                     javax.naming,
                     javax.naming.spi,
                     javax.sql,
                     javax.sql.rowset,
                     javax.sql.rowset.serial,
                     javax.sql.rowset.spi,
                     com.codahale.metrics;resolution:=optional,
                     com.codahale.metrics.health;resolution:=optional,
                     io.micrometer.core.instrument;resolution:=optional,
                     org.slf4j;version="[1.6,2)",
                     org.hibernate;resolution:=optional,
                     org.hibernate.cfg;resolution:=optional,
                     org.hibernate.engine.jdbc.connections.spi;resolution:=optional,
                     org.hibernate.service;resolution:=optional,
                     org.hibernate.service.spi;resolution:=optional
                  </Import-Package>
                  <Bundle-SymbolicName>${project.groupId}.${project.artifactId}</Bundle-SymbolicName>
                  <DynamicImport-Package>*</DynamicImport-Package>
               </instructions>
            </configuration>
            <executions>
               <!-- This execution makes sure that the manifest is available when the tests are executed -->
               <execution>
                  <goals>
                     <goal>manifest</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
      </plugins>

      <pluginManagement>
         <plugins>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-compiler-plugin</artifactId>
               <version>3.8.0</version>
               <extensions>true</extensions>
               <configuration>
                  <source>1.8</source>
                  <target>1.8</target>
                  <compilerArgs>-Xlint</compilerArgs>
               </configuration>
            </plugin>

            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-release-plugin</artifactId>
               <version>${maven.release.version}</version>
               <configuration>
                  <autoVersionSubmodules>true</autoVersionSubmodules>
                  <tagNameFormat>Anteros-DBCP-@{project.version}</tagNameFormat>
               </configuration>
            </plugin>

            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-surefire-plugin</artifactId>
               <version>2.22.1</version>
               <configuration>
                  <!-- Sets the VM argument line used when unit tests are run. -->
                  <argLine>${surefireArgLine} ${sureFireOptions9}</argLine>
                  <!-- Skips unit tests if the value of skip.unit.tests property is true -->
                  <skipTests>${skip.unit.tests}</skipTests>
                  <reuseForks>${sureFireForks9}</reuseForks>
               </configuration>
            </plugin>

            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-source-plugin</artifactId>
               <version>3.0.1</version>
               <configuration>
                  <!-- outputDirectory>/absolute/path/to/the/output/directory</outputDirectory>
                     <finalName>filename-of-generated-jar-file</finalName -->
                  <attach>true</attach>
               </configuration>
               <executions>
                  <execution>
                     <id>attach-sources</id>
                     <goals>
                        <goal>jar</goal>
                     </goals>
                  </execution>
               </executions>
            </plugin>

            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-javadoc-plugin</artifactId>
               <version>3.0.1</version>
               <configuration>
                  <show>public</show>
                  <excludePackageNames>br.com.anteros.dbcp.hibernate:br.com.anteros.dbcp.metrics.*:br.com.anteros.dbcp.pool:br.com.anteros.dbcp.util</excludePackageNames>
                  <attach>true</attach>
                  <maxmemory>1024m</maxmemory>
               </configuration>
               <executions>
                  <execution>
                     <id>bundle-sources</id>
                     <phase>package</phase>
                     <goals>
                        <goal>jar</goal>
                     </goals>
                  </execution>
               </executions>
            </plugin>
            <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
            <plugin>
            	<groupId>org.eclipse.m2e</groupId>
            	<artifactId>lifecycle-mapping</artifactId>
            	<version>1.0.0</version>
            	<configuration>
            		<lifecycleMappingMetadata>
            			<pluginExecutions>
            				<pluginExecution>
            					<pluginExecutionFilter>
            						<groupId>org.codehaus.mojo</groupId>
            						<artifactId>
            							exec-maven-plugin
            						</artifactId>
            						<versionRange>
            							[1.6.0,)
            						</versionRange>
            						<goals>
            							<goal>java</goal>
            						</goals>
            					</pluginExecutionFilter>
            					<action>
            						<ignore></ignore>
            					</action>
            				</pluginExecution>
            			</pluginExecutions>
            		</lifecycleMappingMetadata>
            	</configuration>
            </plugin>
         </plugins>
      </pluginManagement>
   </build>

   <profiles>
      <profile>
         <id>Java9</id>
         <activation>
            <jdk>[9,)</jdk>
         </activation>
         <properties>
            <!-- sureFireOptions9>
               -add-opens java.base/java.net=ALL-UNNAMED
               -add-opens java.base/java.security=ALL-UNNAMED
               -add-exports java.base/sun.net.www.protocol.http=ALL-UNNAMED
               -add-exports java.base/sun.net.www.protocol.https=ALL-UNNAMED
            </sureFireOptions9 -->
            <sureFireForks9>true</sureFireForks9>
            <artifact.classifier>java9</artifact.classifier>
         </properties>
      </profile>

      <profile>
         <id>release-sign-artifacts</id>
         <activation>
            <property>
               <name>performRelease</name>
               <value>true</value>
            </property>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-gpg-plugin</artifactId>
                  <version>1.6</version>
                  <executions>
                     <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                           <goal>sign</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
      
      
      
		
		<profile>
			<id>maven-central</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<version>1.6.3</version>
						<extensions>true</extensions>
						<configuration>
							<serverId>nexus-releases</serverId>
							<nexusUrl>https://oss.sonatype.org/</nexusUrl>
							<autoReleaseAfterClose>true</autoReleaseAfterClose>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<version>1.6.3</version>
						<extensions>true</extensions>
						<configuration>
							<serverId>nexus-releases</serverId>
							<nexusUrl>https://oss.sonatype.org/</nexusUrl>
							<autoReleaseAfterClose>true</autoReleaseAfterClose>
						</configuration>
					</plugin>

				</plugins>

				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-compiler-plugin</artifactId>
							<version>3.1</version>
							<configuration>
								<target>${java.versao}</target>
								<source>${java.versao}</source>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-source-plugin</artifactId>
							<executions>
								<execution>
									<id>attach-sources</id>
									<goals>
										<goal>jar</goal>
									</goals>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-javadoc-plugin</artifactId>
							<executions>
								<execution>
									<id>attach-javadocs</id>
									<goals>
										<goal>jar</goal>
									</goals>

								</execution>
							</executions>
							<configuration>
								<doclint>none</doclint>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-dependency-plugin</artifactId>
							<executions>
								<execution>
									<id>copy-dependencies</id>
									<phase>prepare-package</phase>
									<goals>
										<goal>copy-dependencies</goal>
									</goals>
									<configuration>
										<outputDirectory>${project.build.directory}/lib</outputDirectory>
										<overWriteReleases>false</overWriteReleases>
										<overWriteSnapshots>false</overWriteSnapshots>
										<overWriteIfNewer>true</overWriteIfNewer>
									</configuration>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jar-plugin</artifactId>
							<configuration>
								<archive>
									<manifest>
										<addClasspath>true</addClasspath>
										<classpathPrefix>lib/</classpathPrefix>
										<mainClass>br.com.anteros.iot.actuators.collectors.CameraQRCodeCollector</mainClass>
									</manifest>
								</archive>
							</configuration>
						</plugin>

					</plugins>
				</pluginManagement>
			</build>

			<distributionManagement>
				<repository>
					<id>nexus-releases</id>
					<name>Nexus Release Repository</name>
					<url>http://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
				</repository>
			</distributionManagement>

			<repositories>
				<repository>
					<id>bintray</id>
					<url>http://dl.bintray.com/${bintray.subject}/${bintray.repo}</url>
					<releases>
						<enabled>true</enabled>
					</releases>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</repository>
			</repositories>
		</profile>
		<profile>
			<id>bintray</id>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-compiler-plugin</artifactId>
							<version>3.1</version>
							<configuration>
								<target>${java.versao}</target>
								<source>${java.versao}</source>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-source-plugin</artifactId>
							<executions>
								<execution>
									<id>attach-sources</id>
									<goals>
										<goal>jar</goal>
									</goals>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-javadoc-plugin</artifactId>
							<executions>
								<execution>
									<id>attach-javadocs</id>
									<goals>
										<goal>jar</goal>
									</goals>

								</execution>
							</executions>
							<configuration>
								<doclint>none</doclint>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-dependency-plugin</artifactId>
							<executions>
								<execution>
									<id>copy-dependencies</id>
									<phase>prepare-package</phase>
									<goals>
										<goal>copy-dependencies</goal>
									</goals>
									<configuration>
										<outputDirectory>${project.build.directory}/lib</outputDirectory>
										<overWriteReleases>false</overWriteReleases>
										<overWriteSnapshots>false</overWriteSnapshots>
										<overWriteIfNewer>true</overWriteIfNewer>
									</configuration>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jar-plugin</artifactId>
							<configuration>
								<archive>
									<manifest>
										<addClasspath>true</addClasspath>
										<classpathPrefix>lib/</classpathPrefix>
										<mainClass>br.com.anteros.iot.actuators.collectors.CameraQRCodeCollector</mainClass>
									</manifest>
								</archive>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>

			<distributionManagement>
				<repository>
					<id>bintray-REPO-deploy</id>
					<url>https://api.bintray.com/maven/${bintray.subject}/${bintray.repo}/${bintray.package}/;publish=1;override=1</url>
				</repository>
			</distributionManagement>

			<repositories>
				<repository>
					<id>bintray</id>
					<url>http://dl.bintray.com/${bintray.subject}/${bintray.repo}</url>
					<releases>
						<enabled>true</enabled>
					</releases>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</repository>
			</repositories>
		</profile>
		
		<profile>
			<id>local</id>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-compiler-plugin</artifactId>
							<version>3.1</version>
							<configuration>
								<target>${java.versao}</target>
								<source>${java.versao}</source>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-source-plugin</artifactId>
							<executions>
								<execution>
									<id>attach-sources</id>
									<goals>
										<goal>jar</goal>
									</goals>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-javadoc-plugin</artifactId>
							<executions>
								<execution>
									<id>attach-javadocs</id>
									<goals>
										<goal>jar</goal>
									</goals>

								</execution>
							</executions>
							<configuration>
								<doclint>none</doclint>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-dependency-plugin</artifactId>
							<executions>
								<execution>
									<id>copy-dependencies</id>
									<phase>prepare-package</phase>
									<goals>
										<goal>copy-dependencies</goal>
									</goals>
									<configuration>
										<outputDirectory>${project.build.directory}/lib</outputDirectory>
										<overWriteReleases>false</overWriteReleases>
										<overWriteSnapshots>false</overWriteSnapshots>
										<overWriteIfNewer>true</overWriteIfNewer>
									</configuration>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jar-plugin</artifactId>
							<configuration>
								<archive>
									<manifest>
										<addClasspath>true</addClasspath>
										<classpathPrefix>lib/</classpathPrefix>
										<mainClass>br.com.anteros.iot.actuators.collectors.CameraQRCodeCollector</mainClass>
									</manifest>
								</archive>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>

		</profile>
	

      <profile>
         <id>felix</id>
         <activation>
            <activeByDefault>true</activeByDefault>
            <property>
               <name>pax.exam.framework</name>
               <value>felix</value>
            </property>
         </activation>
         <properties>
            <pax.exam.framework>felix</pax.exam.framework>
            <pax.exam.logging>none</pax.exam.logging>
         </properties>
         <dependencies>
            <dependency>
               <groupId>org.apache.felix</groupId>
               <artifactId>org.apache.felix.framework</artifactId>
               <version>${felix.version}</version>
               <scope>test</scope>
            </dependency>
         </dependencies>
      </profile>
   </profiles>
</project>
